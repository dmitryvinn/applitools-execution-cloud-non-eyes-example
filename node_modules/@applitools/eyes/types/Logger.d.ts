import type * as logger from '@applitools/logger';
import { LogHandler, LogHandlerData, FileLogHandlerData, ConsoleLogHandlerData } from './input/LogHandler';
export declare class Logger {
    private _logger?;
    private _options;
    private _makeLogger;
    /** @internal */
    readonly isLogger = true;
    /** @internal */
    constructor(logger?: logger.Logger);
    constructor(options?: {
        show?: boolean;
        label?: string;
        handler?: LogHandler;
    });
    constructor(show?: boolean);
    /** @internal */
    getLogger(): logger.Logger;
    getLogHandler(): LogHandlerData | ConsoleLogHandlerData | FileLogHandlerData;
    setLogHandler(handler: LogHandler): void;
    verbose(...messages: any[]): void;
    log(...messages: any[]): void;
    warn(...messages: any[]): void;
    error(...messages: any[]): void;
    fatal(...messages: any[]): void;
    open(): void;
    close(): void;
    /** @internal */
    extend(label?: string): Logger;
}
