import { AppUrls, AppUrlsData } from './AppUrls';
import { ApiUrls, ApiUrlsData } from './ApiUrls';
export type StepInfo = {
    readonly name: string;
    readonly isDifferent: boolean;
    readonly hasBaselineImage: boolean;
    readonly hasCurrentImage: boolean;
    readonly appUrls: AppUrls;
    readonly apiUrls: ApiUrls;
    readonly renderId: string[];
};
export declare class StepInfoData implements Required<StepInfo> {
    private _info;
    /** @internal */
    constructor(info: StepInfo);
    get name(): string;
    getName(): string;
    /** @deprecated */
    setName(value: string): void;
    get isDifferent(): boolean;
    getIsDifferent(): boolean;
    /** @deprecated */
    setIsDifferent(value: boolean): void;
    get hasBaselineImage(): boolean;
    getHasBaselineImage(): boolean;
    /** @deprecated */
    setHasBaselineImage(value: boolean): void;
    get hasCurrentImage(): boolean;
    getHasCurrentImage(): boolean;
    /** @deprecated */
    setHasCurrentImage(hasCurrentImage: boolean): void;
    get appUrls(): AppUrls;
    getAppUrls(): AppUrlsData;
    /** @deprecated */
    setAppUrls(appUrls: AppUrls): void;
    get apiUrls(): ApiUrls;
    getApiUrls(): ApiUrlsData;
    /** @deprecated */
    setApiUrls(apiUrls: ApiUrls): void;
    get renderId(): string[];
    getRenderId(): string[];
    /** @deprecated */
    setRenderId(renderId: string[]): void;
    /** @internal */
    toObject(): StepInfo;
    /** @internal */
    toJSON(): StepInfo;
    /** @internal */
    toString(): string;
}
