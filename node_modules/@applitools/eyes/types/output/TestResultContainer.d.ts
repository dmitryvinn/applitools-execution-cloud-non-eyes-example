import type * as Core from '@applitools/core';
import { TestResults, TestResultsData } from './TestResults';
import { AndroidDeviceInfo, ChromeEmulationInfo, ChromeEmulationInfoLegacy, DesktopBrowserInfo, IOSDeviceInfo } from '../input/RenderInfo';
type RenderInfo = DesktopBrowserInfo | ChromeEmulationInfo | IOSDeviceInfo | AndroidDeviceInfo | ChromeEmulationInfoLegacy;
export type TestResultContainer = {
    readonly exception?: Error;
    readonly testResults?: TestResults;
    readonly browserInfo?: RenderInfo;
};
export declare class TestResultContainerData implements Required<TestResultContainer> {
    private _container;
    private _core?;
    /** @internal */
    constructor(options: {
        container: Core.TestResultContainer<'classic' | 'ufg'>;
        core?: Core.Core<Core.SpecType, 'classic' | 'ufg'>;
    });
    get testResults(): TestResults;
    getTestResults(): TestResultsData;
    get exception(): Error;
    getException(): Error;
    get browserInfo(): RenderInfo;
    getBrowserInfo(): RenderInfo;
    /** @internal */
    toObject(): TestResultContainer;
    /** @internal */
    toJSON(): Core.TestResultContainer<'classic' | 'ufg'>;
    /** @internal */
    toString(): string;
}
export {};
