import { MatchLevel, MatchLevelEnum } from '../enums/MatchLevel';
import { ExactMatchSettings, ExactMatchSettingsData } from './ExactMatchSettings';
import { FloatingMatchSettings, FloatingMatchSettingsData } from './FloatingMatchSettings';
import { AccessibilityMatchSettings, AccessibilityMatchSettingsData } from './AccessibilityMatchSettings';
import { Region, RegionData } from './Region';
import { AccessibilitySettings } from './AccessibilitySettings';
/** @undocumented */
export type ImageMatchSettings = {
    exact?: ExactMatchSettings;
    matchLevel?: MatchLevel;
    ignoreCaret?: boolean;
    useDom?: boolean;
    enablePatterns?: boolean;
    ignoreDisplacements?: boolean;
    ignoreRegions?: Region[];
    layoutRegions?: Region[];
    strictRegions?: Region[];
    contentRegions?: Region[];
    floatingRegions?: (Region | FloatingMatchSettings)[];
    accessibilityRegions?: (Region | AccessibilityMatchSettings)[];
    accessibilitySettings?: AccessibilitySettings;
};
/** @undocumented */
export declare class ImageMatchSettingsData implements Required<ImageMatchSettings> {
    private _settings;
    constructor(settings?: ImageMatchSettings);
    get exact(): ExactMatchSettings;
    set exact(exact: ExactMatchSettings);
    getExact(): ExactMatchSettingsData;
    setExact(exact: ExactMatchSettings): void;
    get matchLevel(): MatchLevel;
    set matchLevel(matchLevel: MatchLevel);
    getMatchLevel(): MatchLevelEnum;
    setMatchLevel(matchLevel: MatchLevel): void;
    get ignoreCaret(): boolean;
    set ignoreCaret(ignoreCaret: boolean);
    getIgnoreCaret(): boolean;
    setIgnoreCaret(ignoreCaret: boolean): void;
    get useDom(): boolean;
    set useDom(useDom: boolean);
    getUseDom(): boolean;
    setUseDom(useDom: boolean): void;
    get enablePatterns(): boolean;
    set enablePatterns(enablePatterns: boolean);
    getEnablePatterns(): boolean;
    setEnablePatterns(enablePatterns: boolean): void;
    get ignoreDisplacements(): boolean;
    set ignoreDisplacements(ignoreDisplacements: boolean);
    getIgnoreDisplacements(): boolean;
    setIgnoreDisplacements(ignoreDisplacements: boolean): void;
    get ignoreRegions(): Region[];
    set ignoreRegions(ignoreRegions: Region[]);
    getIgnoreRegions(): RegionData[];
    setIgnoreRegions(ignoreRegions: Region[]): void;
    get layoutRegions(): Region[];
    set layoutRegions(layoutRegions: Region[]);
    get layout(): Region[];
    set layout(layoutRegions: Region[]);
    getLayoutRegions(): RegionData[];
    setLayoutRegions(layoutRegions: Region[]): void;
    get strictRegions(): Region[];
    set strictRegions(strictRegions: Region[]);
    get strict(): Region[];
    set strict(strictRegions: Region[]);
    getStrictRegions(): RegionData[];
    setStrictRegions(strictRegions: Region[]): void;
    get contentRegions(): Region[];
    set contentRegions(contentRegions: Region[]);
    get content(): Region[];
    set content(contentRegions: Region[]);
    getContentRegions(): RegionData[];
    setContentRegions(contentRegions: Region[]): void;
    get floatingRegions(): (Region | FloatingMatchSettings)[];
    set floatingRegions(floatingRegions: (Region | FloatingMatchSettings)[]);
    get floating(): (Region | FloatingMatchSettings)[];
    set floating(floatingRegions: (Region | FloatingMatchSettings)[]);
    getFloatingRegions(): FloatingMatchSettingsData[];
    setFloatingRegions(floatingRegions: FloatingMatchSettings[]): void;
    get accessibilityRegions(): (Region | AccessibilityMatchSettings)[];
    set accessibilityRegions(accessibilityRegions: (Region | AccessibilityMatchSettings)[]);
    get accessibility(): (Region | AccessibilityMatchSettings)[];
    set accessibility(accessibilityRegions: (Region | AccessibilityMatchSettings)[]);
    getAccessibilityRegions(): AccessibilityMatchSettingsData[];
    setAccessibilityRegions(accessibilityRegions: AccessibilityMatchSettings[]): void;
    get accessibilitySettings(): AccessibilitySettings;
    set accessibilitySettings(accessibilitySettings: AccessibilitySettings);
    getAccessibilitySettings(): AccessibilitySettings;
    setAccessibilitySettings(accessibilitySettings: AccessibilitySettings): void;
    /** @internal */
    toObject(): ImageMatchSettings;
    /** @internal */
    toJSON(): ImageMatchSettings;
    /** @internal */
    toString(): string;
}
