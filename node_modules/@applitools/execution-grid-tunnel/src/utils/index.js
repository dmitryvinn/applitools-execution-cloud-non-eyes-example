const createDirectoryIfDoesntExist = require('./create-directory-if-doesnt-exist')
const createIniFileFromJson = require('./createIniFileFromJson')
const createLogger = require('./createLogger')
const deleteOldFiles = require('./delete-old-files')
const {generateEgTunnelError, getErrorStatusCode, getOriginalError} = require('./eg-tunnel-errors')
const extractEyesDataFromHeaders = require('./extract-eyes-data-from-headers')
const extraceDataFromRequest = require('./extract-data-from-request')
const findFreePort = require('./find-free-port')
const initSocks5ProxyServer = require('./init-socks5-proxy-server')
const {getCacheDirectoryPath} = require("./get-cache-directory-path")
const FrpcDownloadError = require("./frpc-download-error")

function generatePromise() {
  let resolveFn, rejectFn
  const promise = new Promise((resolve, reject) => {
    resolveFn = resolve
    rejectFn = reject
  })
  return [promise, resolveFn, rejectFn]
}

module.exports = {
  createDirectoryIfDoesntExist,
  createIniFileFromJson,
  createLogger,
  deleteOldFiles,
  extractEyesDataFromHeaders,
  extraceDataFromRequest,
  findFreePort,
  generateEgTunnelError,
  generatePromise,
  getOriginalError,
  getErrorStatusCode,
  initSocks5ProxyServer,
  getCacheDirectoryPath,
  FrpcDownloadError
}
