import { type SpecType, type SpecDriver } from './spec-driver';
import { type Selector } from './selector';
export declare function transformSelector<T extends SpecType>(spec: Pick<SpecDriver<T>, 'isSelector' | 'transformSelector'>, selector: Selector<T>, environment?: {
    isWeb?: boolean;
    isNative?: boolean;
    isIOS?: boolean;
    isAndroid?: boolean;
}): T['selector'];
export declare function splitSelector<T extends SpecType>(spec: Pick<SpecDriver<T>, 'isSelector'>, selector: Selector<T>): {
    contextSelectors: Selector<T>[];
    elementSelector: Selector<T>;
};
export declare function withFastCache<TSpecDriver extends SpecDriver<SpecType>>(spec: TSpecDriver): TSpecDriver;
