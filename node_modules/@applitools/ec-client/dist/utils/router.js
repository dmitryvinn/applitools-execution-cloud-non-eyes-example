"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeCallback = void 0;
function makeCallback(handler) {
    return async function callback(request, response) {
        const routes = [];
        const fallbacks = [];
        const catches = [];
        const finals = [];
        const router = {
            get: (pattern, callback) => routes.push({ method: 'GET', pattern, callback }),
            post: (pattern, callback) => routes.push({ method: 'POST', pattern, callback }),
            put: (pattern, callback) => routes.push({ method: 'PUT', pattern, callback }),
            delete: (pattern, callback) => routes.push({ method: 'DELETE', pattern, callback }),
            any: callback => fallbacks.push({ callback }),
            catch: callback => catches.push({ callback }),
            finally: callback => finals.push({ callback }),
        };
        handler({ router, request, response });
        try {
            for (const { method, pattern, callback } of routes) {
                if (request.method === method && request.url) {
                    const regexp = pattern instanceof RegExp
                        ? pattern
                        : new RegExp(`^${pattern.replace(/:([^\/]+)/g, (_, name) => `(?<${name}>[^/]+)`)}/?$`);
                    const match = request.url.match(regexp);
                    if (match) {
                        await callback({ match });
                        return;
                    }
                }
            }
            for (const { callback } of fallbacks) {
                await callback();
            }
        }
        catch (error) {
            for (const { callback } of catches) {
                await callback({ error });
            }
        }
        finally {
            for (const { callback } of finals) {
                await callback();
            }
        }
    };
}
exports.makeCallback = makeCallback;
