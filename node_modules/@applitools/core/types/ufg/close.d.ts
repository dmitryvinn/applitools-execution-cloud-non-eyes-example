import type { DriverTarget, CloseSettings } from './types';
import { type Eyes as BaseEyes } from '@applitools/core-base';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from '@applitools/driver';
import { Renderer } from '@applitools/ufg-client';
type Options<TSpec extends SpecType> = {
    storage: Map<string, Promise<{
        renderer: Renderer;
        eyes: BaseEyes;
    }>[]>;
    target?: DriverTarget<TSpec>;
    spec?: SpecDriver<TSpec>;
    logger: Logger;
};
export declare function makeClose<TSpec extends SpecType>({ storage, target, spec, logger: mainLogger }: Options<TSpec>): ({ settings, logger, }?: {
    settings?: CloseSettings | undefined;
    logger?: Logger | undefined;
}) => Promise<void>;
export {};
