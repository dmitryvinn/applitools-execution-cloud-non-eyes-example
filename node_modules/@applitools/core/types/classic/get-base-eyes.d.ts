import type { Eyes, OpenSettings } from './types';
import type { Eyes as BaseEyes } from '@applitools/core-base';
import { type SpecType } from '@applitools/driver';
import { type Logger } from '@applitools/logger';
type Options<TSpec extends SpecType> = {
    settings: OpenSettings;
    eyes: Eyes<TSpec>;
    base?: BaseEyes[];
    logger: Logger;
};
export declare function makeGetBaseEyes<TSpec extends SpecType>({ settings, eyes, base, logger: mainLogger }: Options<TSpec>): (({ logger }?: {
    logger?: Logger | undefined;
}) => Promise<BaseEyes[]>) & {
    getCachedValues(): Promise<BaseEyes[]>[];
    setCachedValue(key: any, value: Promise<BaseEyes[]>): void;
    clearCache(): void;
};
export {};
