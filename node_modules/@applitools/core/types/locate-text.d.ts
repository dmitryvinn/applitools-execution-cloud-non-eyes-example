import type { Core, Target, LocateTextSettings, Config, LocateTextResult } from './types';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from '@applitools/driver';
type Options<TSpec extends SpecType> = {
    spec?: SpecDriver<TSpec>;
    core: Core<TSpec>;
    logger: Logger;
};
export declare function makeLocateText<TSpec extends SpecType>({ spec, core, logger: mainLogger }: Options<TSpec>): <TPattern extends string>({ target, settings, config, logger, }: {
    target: Target<TSpec, 'classic'>;
    settings: LocateTextSettings<TPattern, TSpec>;
    config?: Config<TSpec, "classic"> | undefined;
    logger?: Logger | undefined;
}) => Promise<LocateTextResult<TPattern>>;
export {};
