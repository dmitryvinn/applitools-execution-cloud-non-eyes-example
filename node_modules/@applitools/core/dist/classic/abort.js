"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeAbort = void 0;
const driver_1 = require("@applitools/driver");
function makeAbort({ eyes, target, spec, logger: mainLogger }) {
    return async function abort({ settings, logger = mainLogger, } = {}) {
        logger = logger.extend(mainLogger);
        logger.log('Command "abort" is called with settings', settings);
        settings !== null && settings !== void 0 ? settings : (settings = {});
        if (!settings.testMetadata) {
            try {
                const driver = (0, driver_1.isDriver)(target, spec) ? await (0, driver_1.makeDriver)({ spec, driver: target, logger }) : null;
                settings.testMetadata = await (driver === null || driver === void 0 ? void 0 : driver.getSessionMetadata());
            }
            catch (error) {
                logger.warn('Command "abort" received an error during extracting driver metadata', error);
            }
        }
        const baseEyes = await eyes.getBaseEyes();
        await Promise.all(baseEyes.map(baseEyes => baseEyes.abort({ settings, logger })));
    };
}
exports.makeAbort = makeAbort;
