"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.separateDuplicateResults = void 0;
function separateDuplicateResults(containers) {
    const containerByBaselineId = new Map();
    const duplicates = [];
    const possibleDuplicateContainers = containers.filter(container => { var _a; return !((_a = container.result) === null || _a === void 0 ? void 0 : _a.keepIfDuplicate); });
    for (const container of possibleDuplicateContainers) {
        if (container.result) {
            const containerForThisBaseline = containerByBaselineId.get(container.result.baselineId);
            if (containerForThisBaseline === null || containerForThisBaseline === void 0 ? void 0 : containerForThisBaseline.result) {
                const initializedAt1 = Date.parse(containerForThisBaseline.result.initializedAt);
                const initializedAt2 = Date.parse(container.result.initializedAt);
                if (initializedAt2 > initializedAt1) {
                    duplicates.push(containerForThisBaseline);
                    containerByBaselineId.set(container.result.baselineId, container);
                }
                else {
                    duplicates.push(container);
                }
            }
            else {
                containerByBaselineId.set(container.result.baselineId, container);
            }
        }
    }
    return [
        // tests to keep
        !duplicates.length ? containers : containers.filter(container => !duplicates.includes(container)),
        // tests to delete
        duplicates,
    ];
}
exports.separateDuplicateResults = separateDuplicateResults;
